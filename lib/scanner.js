// Generated by CoffeeScript 1.6.2
(function() {
  var Scanner, grammar;

  grammar = require('./grammar');

  module.exports = Scanner = (function() {
    Scanner.scan = function(source) {
      return this.scanNodes(source);
    };

    Scanner.scanNodes = function(source) {
      var scanner, tokens;

      tokens = [];
      scanner = new Scanner(source);
      return scanner.scan('NODES');
    };

    Scanner.scanString = function(source) {
      var scanner, tokens;

      tokens = [];
      scanner = new Scanner(source);
      return scanner.scan('STRING');
    };

    Scanner.dedentablePattern = /^(end|when|else|catch|finally)(?:\W|$)/;

    function Scanner(source) {
      this.source = source;
    }

    Scanner.prototype.scan = function(type) {
      var token, _i, _len, _ref, _ref1, _results;

      _ref = grammar.parse(this.source, type);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        token = _ref[_i];
        _results.push(((_ref1 = this[token.type]) != null ? _ref1.call(this, token) : void 0) || token);
      }
      return _results;
    };

    Scanner.prototype.eco = function(token) {
      if (token.content && this.isDedentable(token.content)) {
        token.dedent = true;
      }
      if (token.directive) {
        token.indent = true;
      }
      return token;
    };

    Scanner.prototype.isDedentable = function(code) {
      return code.match(Scanner.dedentablePattern);
    };

    return Scanner;

  })();

}).call(this);
