// Generated by CoffeeScript 1.6.2
(function() {
  var CoffeeScript, indent, precompile, preprocess, preprocessString, _ref;

  CoffeeScript = require("coffee-script");

  _ref = require("./preprocessor"), preprocess = _ref.preprocess, preprocessString = _ref.preprocessString;

  indent = require("./util").indent;

  exports.precompileString = function(source) {
    var script;

    script = CoffeeScript.compile(preprocessString(source), {
      bare: true
    });
    return "function(__obj) {\n  if (!__obj) __obj = {};\n\n  var __escape = __obj.escape = function(value) {\n    return (\"\" + value).replace(/&/g, \"&amp;\")\n                       .replace(/</g, \"&lt;\")\n                       .replace(/>/g, \"&gt;\")\n                       .replace(/\x22/g, \"&quot;\");\n  };\n\n  var __capture = function(out, callback) {\n    var out = __out, result;\n    __out = [];\n    callback.call(this);\n    result = __out.join('');\n    __out = out;\n    return result;\n  };\n\n  return (function() {\n  " + (indent(script, 4)) + "\n  }).call(__obj);\n}";
  };

  exports.precompileNodes = exports.precompile = precompile = function(source) {
    var script;

    script = CoffeeScript.compile(preprocess(source), {
      bare: true
    });
    return "function(__obj) {\n  if (!__obj) __obj = {};\n\n  var __escape = __obj.escape = function(value) {\n    return (\"\" + value).replace(/&/g, \"&amp;\")\n                       .replace(/</g, \"&lt;\")\n                       .replace(/>/g, \"&gt;\")\n                       .replace(/\x22/g, \"&quot;\");\n  };\n\n  var __capture = function(callback) {\n    var out = __out, result;\n    __out = [];\n    callback.call(this);\n    result = __out.join('');\n    __out = out;\n    return result;\n  };\n\n  var __createFragment = __obj.createFragment = function(value, element) {\n    if (value instanceof DocumentFragment) return value;\n    element || (element = document.createElement('div'));\n    var range = document.createRange();\n    range.setStart(element, 0);\n    range.collapse(false);\n    return range.createContextualFragment(value);\n  };\n\n  return (function() {\n  " + (indent(script, 4)) + "\n  }).call(__obj);\n}";
  };

  exports.compile = function(source) {
    return new Function("return " + (precompile(source)))();
  };

}).call(this);
